name: Tagged Release

on:
  push:
    tags: [ "v*" ]

jobs:
  build:
    # Arch Matrix
    strategy:
      fail-fast: false
      matrix:
        arch: [x64, arm64]
        short-os: [win, osx, linux]
        include:
          - short-os: osx
            os: macos-latest
            rust-os: apple-darwin
            tauri-bundles: dmg,app
            tauri-create-updater: true
          - short-os: win
            os: windows-latest
            rust-os: pc-windows-msvc
            tauri-bundles: nsis
            tauri-create-updater: true
          - short-os: linux
            os: ubuntu-22.04
            rust-os: unknown-linux-gnu
            tauri-bundles: deb,rpm
            tauri-create-updater: false
          - arch: x64
            rust-arch: x86_64
          - arch: arm64
            rust-arch: aarch64
          - short-os: linux
            arch: arm64
            os: ubuntu-22.04-arm
    uses: ./.github/workflows/reusable-tauri.yml
    with:
      arch: ${{ matrix.arch }}
      rust-arch: ${{ matrix.rust-arch }}
      os: ${{ matrix.os }}
      short-os: ${{ matrix.short-os }}
      rust-os: ${{ matrix.rust-os }}
      tauri-bundles: ${{ matrix.tauri-bundles }}
      publish-release: ${{ true }}
      tauri-create-updater: ${{ matrix.tauri-create-updater }}
      api-ref: 'v0.23.0'
    secrets: inherit # Pass all secrets
  create-github-release:
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')}}
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - name: Checkout Sauna UI
        uses: actions/checkout@v4
      - name: Publish Github Release
        env:
          GITHUB_TOKEN: ${{ secrets.SAUNA_PAT }}
        shell: pwsh
        run: gh release edit ${{ github.ref_name }} --latest --draft=false
  cleanup-github-release:
    if: failure()
    runs-on: ubuntu-22.04
    needs: [build, create-github-release]
    steps:
      - name: Checkout Sauna UI
        uses: actions/checkout@v4
      - name: Remove Github Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: pwsh
        run: gh release delete ${{ github.ref_name }} -y
